0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.7.4
3 info using node@v0.12.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/root/projects/new-sequelize-restful',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /root/.npm/new-sequelize-restful/0.0.0/package.tgz not in flight; packing
9 verbose tar pack [ '/root/.npm/new-sequelize-restful/0.0.0/package.tgz',
9 verbose tar pack   '/root/projects/new-sequelize-restful' ]
10 verbose tarball /root/.npm/new-sequelize-restful/0.0.0/package.tgz
11 verbose folder /root/projects/new-sequelize-restful
12 info prepublish new-sequelize-restful@0.0.0
13 verbose addLocalTarball adding from inside cache /root/.npm/new-sequelize-restful/0.0.0/package.tgz
14 silly cache afterAdd new-sequelize-restful@0.0.0
15 verbose afterAdd /root/.npm/new-sequelize-restful/0.0.0/package/package.json not in flight; writing
16 verbose afterAdd /root/.npm/new-sequelize-restful/0.0.0/package/package.json written
17 silly publish { name: 'new-sequelize-restful',
17 silly publish   dependencies: { underscore: 'latest' },
17 silly publish   description: 'Exports standard restful APIs for Sequelize models',
17 silly publish   version: '0.0.0',
17 silly publish   main: 'lib/route.js',
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'https://github.com/blekr/new-sequelize-restful.git' },
17 silly publish   keywords: [ 'sequelize' ],
17 silly publish   author: { name: 'wenchengsheng', email: '407375207@qq.com' },
17 silly publish   license: 'GNU GENERAL PUBLIC LICENSE',
17 silly publish   bugs: { url: 'https://github.com/blekr/new-sequelize-restful/issues' },
17 silly publish   readme: '# new-restful-sequelize\nnew-restful-sequelize is a module that exports restful APIs for your Sequelize models quickly, inspired by sequelize-reftful-extended but not a fork of that. \n\nIt fully supports Sequelize\'s complex nested querys, including operators such as $gt, $lt, $like, $in and combinations such as $or, and handles pagination in a more standard way, i.e. by Range header in HTTP request and Content-Range header in HTTP response. This is very useful wen you are doing pagination in browser using angular-paginate-anything module. \n\nIt returns negative responses by sending \'403 Forbidden\', \'500 Internal Server Error\' and other standard HTTP response codes instead of sending \'200 OK\' with extra information saying that some errors have happened. This allows us to return positive responses by seding instance or array of instances directly without tedious extra information. This is extremely important in angular ngResource.\n\n# Install\n```console\nnpm install new-sequelize-restful\n```\n\n# Usage\n\n## Configure express\n\n1. Import new-sequelize-restful module\n2. Route your path, e.g. \'/api/staff\', to new Restful(sequelize)).route()\n3. By default, the route should has this format: <br>"/whatever-string/model-name" <br>or <br>"/whatever-string/model-name/id". <br>Examples:\n"/api/staff", "/api/staff/1"\n\n\nCode example: \n```js\nvar express = require(\'express\');\nvar Sequelize = require(\'sequelize\');\nvar Restful = require(\'new-sequelize-restful\');\n\nvar app = express();\nvar sequelize = new Sequelize(\'postgres://user:pass@example.com:5432/dbname\');\n\napp.use(require(\'body-parser\').json({\n\ttype: \'application/*\',\n}));\napp.all(/\\/api\\//, (new Restful(sequelize)).route());\napp.listen(80);\n```\n\n## The Restful APIs\nWe take \'staff\' model for example. <br>\nRemember that:\n\n\n1. It returns \'200 OK\' with instance or instances(depending on the request of a singel object or a collection) as content for positive(successfull) responses.\n2. It returns \'403 Forbidden\', \'500 Internal Server Error\' and other standard HTTP response codes with error message as content for negative(some errors has happened) responses;\n\n\n### GET /api/staff\nReturn an array of all instances. Total number of rows can be read from Content-Range header in response.\n```console\n# curl http://127.0.0.1:8090/api/staff\n```\n```js\n[{\n\t"id":1,\n\t"account":"account1",\n\t"password":"123456",\n\t"name":"tom",\n\t"role":1,\n\t"createAt":"2015-05-06T13:57:37.000Z",\n\t"lastLogin":"2015-05-06T13:57:37.000Z",\n\t"loginCnt":1\n},{\n\t"id":2,\n\t"account":"account2",\n\t"password":"12wfde",\n\t"name":"marry",\n\t"role":1,\n\t"createAt":"2015-05-06T13:58:15.000Z",\n\t"lastLogin":"2015-05-06T13:58:15.000Z",\n\t"loginCnt":1\n}]\n```\nYou can add parameters to the requests. Complex Sequelize\'s nested query is supported.<br>\n\n\n1. All leading underlines \'\\_\'in keys are stripped, e.g. \'http://127.0.0.1:8090/api/staff?_name=tom\' is equal to \'http://127.0.0.1:8090/api/staff?name=tom\'. Because some client side codes do not allow JSON keys with leading \'$\' such as \'$or\' and \'$and\' while Sequelize actually has $or and $and. In this case, you can wrap these keys with leading \'\\_\', e.g. \'\\_$or\' and \'\\_$and\'.\n\n\n2. All values will be parseJSONed if they are of type string and can be parseJSONed safely without error.<br>\nFor example:<br>\n```console\ncurl \'http://127.0.0.1:8090/api/staff?_name=abc2&account=\\{"$like":"%ab%"\\}\'\n```\nwill result the where object in the Sequelize: \n```js\n{ \n\taccount: { \n\t\t\'$like\': \'%ab%\' \n\t}, \n\tname: \'abc2\' \n}\n```\n\n\nYou can also add pagination information to the query.\nThe Pagination information is stored in Range header (includes offset, limit) when request and Content-Range header (includes offset, limit, total-count) when response. Go to [\'angular-paginate-anything\'](https://github.com/begriffs/angular-paginate-anything) for more information.\n```console\n# curl -v --header "Range: 0-10" \'http://127.0.0.1:8090/api/staff?_name=abc2&account=\\{"$like":"%ab%"\\}\'\n```\nResponse:\n```console\nHTTP/1.1 200 OK\nX-Powered-By: Express\nAccept-Ranges: items\nRange-Unit: items\nContent-Range: 0-0/1\nContent-Type: application/json; charset=utf-8\nContent-Length: 153\nETag: W/"99-28f12ee1"\nset-cookie: connect.sid=s%3AA-SdrqRTV-avX_1O_KepGhoKlQFBVsEU.VDvv64%2BZuHN63Dnz8qTjYt9WDhWhD04z1VzpQcxwbW8; Path=/; HttpOnly\nDate: Thu, 14 May 2015 05:09:11 GMT\nConnection: keep-alive\n```\n```js\n[{\n\t"id":16,\n\t"account":"abc2",\n\t"password":"123",\n\t"name":"abc2",\n\t"role":0,\n\t"createAt":"2015-05-10T03:52:37.000Z",\n\t"lastLogin":"0000-00-00 00:00:00",\n\t"loginCnt":0\n}]\n```\n\nSorting by a specified column descending or ascending\n```console\n$ curl \'http://127.0.0.1:8090/api/staff?$sort=-id\'\n```\n```js\n[{\n\t"id":20,\n\t"account":"acct",\n\t"password":"123",\n\t"name":"jon",\n\t"role":1,\n\t"createAt":"2015-05-14T05:23:49.000Z",\n\t"lastLogin":"0000-00-00 00:00:00",\n\t"loginCnt":0\n},{\n\t"id":19,\n\t"account":"ddd",\n\t"password":"123",\n\t"name":"noname",\n\t"role":0,\n\t"createAt":"2015-05-13T11:24:00.000Z",\n\t"lastLogin":"0000-00-00 00:00:00",\n\t"loginCnt":0\n},{\n\t"id":18,\n\t"account":"vv",\n\t"password":"vv",\n\t"name":"vv",\n\t"role":0,\n\t"createAt":"2015-05-12T02:07:59.000Z",\n\t"lastLogin":"0000-00-00 00:00:00",\n\t"loginCnt":0\n}]\n```\n\n\n### POST /api/staff\nCreates a new instance.\n```console\n$ curl --header \'Content-Type: application/json\' -d \'{"account":"acct","password":"123","name":"jon","role":1}\' -X POST http://www.scaleoa.com:8090/api/staff\n```\n```js\n{\n\t"id":20,\n\t"account":"acct",\n\t"password":"123",\n\t"name":"jon",\n\t"role":1\n}\n```\n\n### HEAD /api/staff\nReturns a description of the model\n```console\n$ curl -i -X HEAD http://127.0.0.1:8090/api/staff\n```\n```js\n{ \n\tid: { type: \'INT(11)\', allowNull: false, defaultValue: null },\n\timg: { type: \'MEDIUMTEXT\', allowNull: true, defaultValue: null },\n\taccount: { type: \'VARCHAR(64)\', allowNull: false, defaultValue: null },\n\tpassword: { type: \'VARCHAR(64)\', allowNull: false, defaultValue: null },\n\tname: { type: \'VARCHAR(64)\', allowNull: false, defaultValue: null },\n\trole: { type: \'INT(11)\', allowNull: false, defaultValue: null },\n\tcreateAt: { \n\t\ttype: \'TIMESTAMP\',\n\t\tallowNull: false,\n\t\tdefaultValue: \'CURRENT_TIMESTAMP\' \n\t},\n\tlastLogin: { \n\t\ttype: \'TIMESTAMP\',\n\t\tallowNull: false,\n\t\tdefaultValue: \'0000-00-00 00:00:00\' \n\t},\n\tloginCnt: { type: \'INT(11)\', allowNull: false, defaultValue: null }\n}\n```\n\n\n### GET /api/staff/1\nReturns the instance with id 1\n```console\ncurl \'http://127.0.0.1:8090/api/staff/1\'\n```\n```js\n{\n\t"id":1,\n\t"account":"account1",\n\t"password":"123456",\n\t"name":"tom",\n\t"role":1,\n\t"createAt":"2015-05-06T13:57:37.000Z",\n\t"lastLogin":"2015-05-06T13:57:37.000Z",\n\t"loginCnt":1\n}\n```\n\n### DELETE or DEL /api/staff/1\nDestroys a instance with id 1\n```console\n$ curl -X DELETE \'http://127.0.0.1:8090/api/staff/1\'\n```\n```js\n{}\n```\n\n\n### PUT /api/staff/1\nUpdates a instance with id 1\n```console\n$ curl -X PUT --header \'Content-Type: application/json\' -d \'{"name":"new name"}\' \'http://127.0.0.1:8090/api/staff/1\'\n```\n```js\n{\n\t"id":1,\n\t"account":"account1",\n\t"password":"123456",\n\t"name":"new name",\n\t"role":1,\n\t"createAt":"2015-05-06T13:57:37.000Z",\n\t"lastLogin":"2015-05-06T13:57:37.000Z",\n\t"loginCnt":1\n}\n```\n# What\'s next ?\nRestful APIs with associations from Sequelize models will be added at next update.\n\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '864a120814014f83b446086175f0f48e65c0e358',
17 silly publish   homepage: 'https://github.com/blekr/new-sequelize-restful',
17 silly publish   _id: 'new-sequelize-restful@0.0.0',
17 silly publish   _shasum: '4244c7c0c5727b35d8087177d2df01b569da4fda',
17 silly publish   _from: '.' }
18 silly mapToRegistry name new-sequelize-restful
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry https://registry.npmjs.org/
21 silly mapToRegistry uri https://registry.npmjs.org/new-sequelize-restful
22 verbose publish registryBase https://registry.npmjs.org/
23 silly publish uploading /root/.npm/new-sequelize-restful/0.0.0/package.tgz
24 verbose request uri https://registry.npmjs.org/new-sequelize-restful
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 4:50:29 PM
27 verbose request using bearer token for auth
28 verbose request id d85d22a9cb014841
29 http request PUT https://registry.npmjs.org/new-sequelize-restful
30 http 403 https://registry.npmjs.org/new-sequelize-restful
31 verbose headers { 'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=60',
31 verbose headers   'content-length': '95',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   date: 'Thu, 14 May 2015 08:50:30 GMT',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   connection: 'keep-alive',
31 verbose headers   'x-served-by': 'cache-nrt6126-NRT',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1431593429.785450,VS0,VE531' }
32 verbose request invalidating /root/.npm/registry.npmjs.org/new-sequelize-restful on PUT
33 error publish Failed PUT 403
34 verbose stack Error: "You cannot publish over the previously published version 0.0.0." : new-sequelize-restful
34 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
34 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
34 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:344:22)
34 verbose stack     at Request.emit (events.js:110:17)
34 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1239:14)
34 verbose stack     at Request.emit (events.js:129:20)
34 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1187:12)
34 verbose stack     at IncomingMessage.emit (events.js:129:20)
34 verbose stack     at _stream_readable.js:908:16
34 verbose stack     at process._tickCallback (node.js:355:11)
35 verbose statusCode 403
36 verbose pkgid new-sequelize-restful
37 verbose cwd /root/projects/new-sequelize-restful
38 error Linux 3.13.0-30-generic
39 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
40 error node v0.12.2
41 error npm  v2.7.4
42 error code E403
43 error "You cannot publish over the previously published version 0.0.0." : new-sequelize-restful
44 error If you need help, you may report this error at:
44 error     <https://github.com/npm/npm/issues>
45 verbose exit [ 1, true ]
